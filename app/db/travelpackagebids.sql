CREATE TABLE IF NOT EXISTS Countries (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(80) NOT NULL,
phone_code VARCHAR(4) NOT NULL
);

CREATE TABLE IF NOT EXISTS States (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
country_id INT NOT NULL,
name VARCHAR(100) NOT NULL,
FOREIGN KEY (country_id) REFERENCES Countries(id)
);

CREATE TABLE IF NOT EXISTS Status (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
status VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS UserRoles (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS Users (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
userrole_id INT NOT NULL,
status_id INT NOT NULL,
email VARCHAR(120) NOT NULL,
password TEXT NOT NULL,
is_verified BOOLEAN NOT NULL,
created_at DATETIME DEFAULT NOW(),
FOREIGN KEY (status_id) REFERENCES Status(id),
FOREIGN KEY (userrole_id) REFERENCES User_Roles(id)
);


CREATE TABLE IF NOT EXISTS Locations (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
state_id INT NOT NULL,
country_id INT NOT NULL,
FOREIGN KEY (user_id) REFERENCES Users(id),
FOREIGN KEY (country_id) REFERENCES Countries(id),
FOREIGN KEY (state_id) REFERENCES States(id)
);

CREATE TABLE IF NOT EXISTS UserConfirmations (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
confirmuser BOOLEAN NOT NULL,
created_at DATETIME DEFAULT NOW(),
FOREIGN KEY (user_id) REFERENCES Users(id)
);

CREATE TABLE IF NOT EXISTS Profiles (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
country_id INT NOT NULL,
name VARCHAR(120) NOT NULL,
phone VARCHAR(11) NOT NULL,
created_at DATETIME DEFAULT NOW(),
FOREIGN KEY (user_id) REFERENCES Users(id),
FOREIGN KEY (country_id) REFERENCES Countries(id)
);

CREATE TABLE IF NOT EXISTS Packages (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
state_id INT NOT NULL,
people INT NOT NULL,
from_date DATE NOT NULL,
to_date DATE NOT NULL,
description TEXT,
status_id INT NOT NULL,
created_at DATETIME DEFAULT NOW(),
updated_at DATETIME DEFAULT NOW(),
FOREIGN KEY (user_id) REFERENCES Users(id),
FOREIGN KEY (state_id) REFERENCES States(id),
FOREIGN KEY (status_id) REFERENCES Status(id)
);

CREATE TABLE IF NOT EXISTS Bids (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
bidder_id INT NOT NULL,
package_id INT NOT NULL,
offer DECIMAL NOT NULL,
deadline DATETIME NOT NULL,
itenary_file BLOB NOT NULL,
status_id INT NOT NULL,
created_at DATETIME DEFAULT NOW(),
FOREIGN KEY (bidder_id) REFERENCES Users(id),
FOREIGN KEY (package_id) REFERENCES Packages(id),
FOREIGN KEY (status_id) REFERENCES Status(id)
);

CREATE TABLE IF NOT EXISTS Comments (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
package_id INT NOT NULL,
comment TEXT NOT NULL,
created_at DATETIME DEFAULT NOW(),
FOREIGN KEY (user_id) REFERENCES Users(id),
FOREIGN KEY (package_id) REFERENCES Packages(id)
);

CREATE TABLE IF NOT EXISTS Replies (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
comment_id INT NOT NULL,
reply_id INT NOT NULL,
FOREIGN KEY (comment_id) REFERENCES Comments(id),
FOREIGN KEY (reply_id) REFERENCES Comments(id)
);

CREATE TABLE IF NOT EXISTS BlockedUsers (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
all_packages BOOLEAN DEFAULT false,
FOREIGN KEY (user_id) REFERENCES Users(id)
);

CREATE TABLE IF NOT EXISTS BlockedBidders (
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
blocked_user_id INT NOT NULL,
package_id INT NOT NULL,
FOREIGN KEY (blocked_user_id) REFERENCES BlockedUsers(id),
FOREIGN KEY (package_id) REFERENCES Packages(id)
);